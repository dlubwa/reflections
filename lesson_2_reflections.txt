What happens when you initialize a repository? Why do you need to do it?

Initializing a repository creates a hidden .git sub directory that contains all the repositories metadata. The directory can't be tracked by git if not initialized

How is the staging area different from the working directory and the repository?
What value do you think it offers?

Staging area includes all files tracked by git but not yet committed while working directory has all untracked files. The repository contains any files committed. The staging area gives the flexibility of being able to validate whether or not a file is ready to be committed or not


How can you use the staging area to make sure you have one commit per logical
change?

Only add a file that you are ready to commit

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Whenever you want to try something more experimental that deviates majorly from the current project theme or when you want to use a different language for you project. Branches give you the flexibility to do this without worrying too much about affecting the main project

How do the diagrams help you visualize the branch structure?

Its easy to see what commits belong to which branch 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
